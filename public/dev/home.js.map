{"version":3,"sources":["webpack:///./App/src/home/home.js","webpack:///./App/src/home/home.css?2d37"],"names":["Home","socket","io","videoGrid","document","getElementById","createPeer","createMyVideo","peers","peer","Peer","undefined","path","host","port","location","hostname","PORT","config","url","credential","username","on","id","emit","Room_ID","myVideo","createElement","myVideoStream","muted","navigator","mediaDevices","getUserMedia","video","audio","then","stream","addVideoStream","thenCallFromPeer","e","connectToNewUser","userId","call","videoTag","remoteStream","remove","answer","srcObject","addEventListener","play","append"],"mappings":"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AAX,IAAqBC,IAArB;AACH;;;qCAEgBN,M,EAAQ;AAAA;;AACrB,WAAK3B,IAAL,CAAUa,EAAV,CAAa,MAAb,EAAqB,UAACoB,IAAD,EAAU;AAC3B;AACAA,YAAI,CAACI,MAAL,CAAYV,MAAZ;AACA,YAAMO,QAAQ,GAAGvC,QAAQ,CAACuB,aAAT,CAAuB,OAAvB,CAAjB;AACAe,YAAI,CAACpB,EAAL,CAAQ,QAAR,EAAkB,UAACsB,YAAD,EAAkB;AAChC;AACA,gBAAI,CAACP,cAAL,CAAoBM,QAApB,EAA8BC,YAA9B;AACH,SAHD;AAIH,OARD;AASH;;;mCAEcX,K,EAAOG,M,EAAQ;AAC1BH,WAAK,CAACc,SAAN,GAAkBX,MAAlB;AACAH,WAAK,CAACe,gBAAN,CAAuB,gBAAvB,EAAyC,YAAM;AAC3Cf,aAAK,CAACgB,IAAN;AACH,OAFD;AAGA,WAAK9C,SAAL,CAAe+C,MAAf,CAAsBjB,KAAtB;AACH;;;;;;AAGL,IAAIjC,IAAJ,G,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,K;;;;;;;;;;;ACrOA,uC","file":"dev/home.js","sourcesContent":["import '../home/home.css';\r\n\r\nclass Home {\r\n    constructor() {\r\n        this.socket = io('/');\r\n        this.videoGrid = document.getElementById('video-grid');\r\n        this.createPeer();\r\n        this.createMyVideo();\r\n    }\r\n\r\n    createPeer() {\r\n        this.peers = {};\r\n        this.peer = new Peer(undefined, {\r\n            path: '/peerjs',\r\n            host: '/',\r\n            port: location.hostname === 'localhost' ? PORT : '',\r\n            config: {\r\n                'iceServers': [\r\n                    { url: 'stun:stun01.sipphone.com' },\r\n                    { url: 'stun:stun.ekiga.net' },\r\n                    { url: 'stun:stun.fwdnet.net' },\r\n                    { url: 'stun:stun.ideasip.com' },\r\n                    { url: 'stun:stun.iptel.org' },\r\n                    { url: 'stun:stun.rixtelecom.se' },\r\n                    { url: 'stun:stun.schlund.de' },\r\n                    { url: 'stun:stun.l.google.com:19302' },\r\n                    { url: 'stun:stun1.l.google.com:19302' },\r\n                    { url: 'stun:stun2.l.google.com:19302' },\r\n                    { url: 'stun:stun3.l.google.com:19302' },\r\n                    { url: 'stun:stun4.l.google.com:19302' },\r\n                    { url: 'stun:stunserver.org' },\r\n                    { url: 'stun:stun.softjoys.com' },\r\n                    { url: 'stun:stun.voiparound.com' },\r\n                    { url: 'stun:stun.voipbuster.com' },\r\n                    { url: 'stun:stun.voipstunt.com' },\r\n                    { url: 'stun:stun.voxgratia.org' },\r\n                    { url: 'stun:stun.xten.com' },\r\n                    {\r\n                        url: 'turn:numb.viagenie.ca',\r\n                        credential: 'muazkh',\r\n                        username: 'webrtc@live.com'\r\n                    },\r\n                    {\r\n                        url: 'turn:192.158.29.39:3478?transport=udp',\r\n                        credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                        username: '28224511:1379330808'\r\n                    },\r\n                    {\r\n                        url: 'turn:192.158.29.39:3478?transport=tcp',\r\n                        credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                        username: '28224511:1379330808'\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n\r\n        this.peer.on('open', (id) => {\r\n            //console.log('peer open');\r\n            this.socket.emit('vao-phong', Room_ID, id);\r\n        });\r\n    }\r\n\r\n    createMyVideo() {\r\n        this.myVideo = document.createElement('video');\r\n        this.myVideoStream = null;\r\n        this.myVideo.muted = true;\r\n        // get video device\r\n        navigator.mediaDevices.getUserMedia({\r\n            video: true,\r\n            audio: true\r\n        }).then((stream) => {\r\n            //console.log('stream');\r\n            this.myVideoStream = stream;\r\n            this.addVideoStream(this.myVideo, stream);\r\n\r\n            this.thenCallFromPeer(stream);\r\n\r\n            this.socket.on('da-vao', (e) => {\r\n                //console.log('nguoi dung ID=' + e.userId + \" da vao phong \");\r\n                this.connectToNewUser(e.userId, stream);\r\n            });\r\n        });\r\n    }\r\n\r\n    connectToNewUser(userId, stream) {\r\n        var call = this.peer.call(userId, stream);\r\n        const videoTag = document.createElement('video');\r\n        call.on('stream', (remoteStream) => {\r\n            //console.log('peer stream');\r\n            this.addVideoStream(videoTag, remoteStream);\r\n        });\r\n\r\n        call.on('close', () => {\r\n            videoTag.remove();\r\n        });\r\n\r\n        this.peers[userId] = call\r\n    }\r\n\r\n    thenCallFromPeer(stream) {\r\n        this.peer.on('call', (call) => {\r\n            //console.log('peer call');\r\n            call.answer(stream);\r\n            const videoTag = document.createElement('video');\r\n            call.on('stream', (remoteStream) => {\r\n                //console.log('peer stream');\r\n                this.addVideoStream(videoTag, remoteStream);\r\n            });\r\n        });\r\n    }\r\n\r\n    addVideoStream(video, stream) {\r\n        video.srcObject = stream;\r\n        video.addEventListener('loadedmetadata', () => {\r\n            video.play();\r\n        });\r\n        this.videoGrid.append(video);\r\n    };\r\n}\r\n\r\nnew Home();\r\n\r\n// const peers = {};\r\n// const socket = io('/');\r\n// const videoGrid = document.getElementById('video-grid');\r\n// const myVideo = document.createElement('video');\r\n// myVideo.muted = true;\r\n\r\n// const peer = new Peer(undefined, {\r\n//     path: '/peerjs',\r\n//     host: '/',\r\n//     port: location.hostname === 'localhost' ? PORT : '',\r\n//     config: {\r\n//         'iceServers': [\r\n//             { url: 'stun:stun01.sipphone.com' },\r\n//             { url: 'stun:stun.ekiga.net' },\r\n//             { url: 'stun:stun.fwdnet.net' },\r\n//             { url: 'stun:stun.ideasip.com' },\r\n//             { url: 'stun:stun.iptel.org' },\r\n//             { url: 'stun:stun.rixtelecom.se' },\r\n//             { url: 'stun:stun.schlund.de' },\r\n//             { url: 'stun:stun.l.google.com:19302' },\r\n//             { url: 'stun:stun1.l.google.com:19302' },\r\n//             { url: 'stun:stun2.l.google.com:19302' },\r\n//             { url: 'stun:stun3.l.google.com:19302' },\r\n//             { url: 'stun:stun4.l.google.com:19302' },\r\n//             { url: 'stun:stunserver.org' },\r\n//             { url: 'stun:stun.softjoys.com' },\r\n//             { url: 'stun:stun.voiparound.com' },\r\n//             { url: 'stun:stun.voipbuster.com' },\r\n//             { url: 'stun:stun.voipstunt.com' },\r\n//             { url: 'stun:stun.voxgratia.org' },\r\n//             { url: 'stun:stun.xten.com' },\r\n//             {\r\n//                 url: 'turn:numb.viagenie.ca',\r\n//                 credential: 'muazkh',\r\n//                 username: 'webrtc@live.com'\r\n//             },\r\n//             {\r\n//                 url: 'turn:192.158.29.39:3478?transport=udp',\r\n//                 credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n//                 username: '28224511:1379330808'\r\n//             },\r\n//             {\r\n//                 url: 'turn:192.158.29.39:3478?transport=tcp',\r\n//                 credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n//                 username: '28224511:1379330808'\r\n//             }\r\n//         ]\r\n//     }\r\n// });\r\n\r\n// let myVideoStream = null;\r\n// navigator.mediaDevices.getUserMedia({\r\n//     video: true,\r\n//     audio: true\r\n// }).then((stream) => {\r\n//     console.log('stream');\r\n//     myVideoStream = stream;\r\n//     addVideoStream(myVideo, stream);\r\n\r\n//     peer.on('call', function (call) {\r\n//         console.log('peer call', stream);\r\n//         call.answer(stream);\r\n//         const videoTag = document.createElement('video');\r\n//         call.on('stream', function (remoteStream) {\r\n//             console.log('peer stream');\r\n//             addVideoStream(videoTag, remoteStream);\r\n//         });\r\n//     });\r\n\r\n//     socket.on('da-vao', (e) => {\r\n\r\n//         console.log('nguoi dung ID=' + e.userId + \" da vao phong \");\r\n//         connectToNewUser(e.userId, stream);\r\n//     });\r\n// });\r\n\r\n// peer.on('open', (id) => {\r\n//     console.log('peer open');\r\n//     socket.emit('vao-phong', Room_ID, id);\r\n// });\r\n\r\n// socket.on('user-disconnected', userId => {\r\n//     if (peers[userId]) peers[userId].close();\r\n// })\r\n\r\n// const connectToNewUser = (userId, stream) => {\r\n//     var call = peer.call(userId, stream);\r\n//     const videoTag = document.createElement('video');\r\n//     call.on('stream', function (remoteStream) {\r\n//         console.log('peer stream');\r\n//         addVideoStream(videoTag, remoteStream);\r\n//     });\r\n\r\n//     call.on('close', () => {\r\n//         videoTag.remove();\r\n//     });\r\n\r\n//     peers[userId] = call\r\n// }\r\n\r\n\r\n// const addVideoStream = (video, stream) => {\r\n//     video.srcObject = stream;\r\n//     video.addEventListener('loadedmetadata', () => {\r\n//         video.play();\r\n//     });\r\n//     videoGrid.append(video);\r\n// };\r\n\r\n","// extracted by mini-css-extract-plugin"],"sourceRoot":""}